




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace Net_Contact_C2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool NotifyPlayerJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int uniqueID, EAllyType type, string infoData, string statusData, string equipData, string skillData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerJoin;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		Arena_Server.Marshaler.Write(__msg, type);
		Arena_Server.Marshaler.Write(__msg, infoData);
		Arena_Server.Marshaler.Write(__msg, statusData);
		Arena_Server.Marshaler.Write(__msg, equipData);
		Arena_Server.Marshaler.Write(__msg, skillData);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerJoin, Common.NotifyPlayerJoin);
}

public bool NotifyPlayerJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int uniqueID, EAllyType type, string infoData, string statusData, string equipData, string skillData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerJoin;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, uniqueID);
Arena_Server.Marshaler.Write(__msg, type);
Arena_Server.Marshaler.Write(__msg, infoData);
Arena_Server.Marshaler.Write(__msg, statusData);
Arena_Server.Marshaler.Write(__msg, equipData);
Arena_Server.Marshaler.Write(__msg, skillData);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerJoin, Common.NotifyPlayerJoin);
}
public bool NotifyPlayerInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int uniqueID, EAllyType type, string infoData, string statusData, string equipData, string skillData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerInfo;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		Arena_Server.Marshaler.Write(__msg, type);
		Arena_Server.Marshaler.Write(__msg, infoData);
		Arena_Server.Marshaler.Write(__msg, statusData);
		Arena_Server.Marshaler.Write(__msg, equipData);
		Arena_Server.Marshaler.Write(__msg, skillData);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerInfo, Common.NotifyPlayerInfo);
}

public bool NotifyPlayerInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int uniqueID, EAllyType type, string infoData, string statusData, string equipData, string skillData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerInfo;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, uniqueID);
Arena_Server.Marshaler.Write(__msg, type);
Arena_Server.Marshaler.Write(__msg, infoData);
Arena_Server.Marshaler.Write(__msg, statusData);
Arena_Server.Marshaler.Write(__msg, equipData);
Arena_Server.Marshaler.Write(__msg, skillData);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerInfo, Common.NotifyPlayerInfo);
}
public bool NotifyPlayerExit(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int uniqueID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerExit;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerExit, Common.NotifyPlayerExit);
}

public bool NotifyPlayerExit(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int uniqueID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerExit;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, uniqueID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerExit, Common.NotifyPlayerExit);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_NotifyPlayerJoin="NotifyPlayerJoin";
public const string RmiName_NotifyPlayerInfo="NotifyPlayerInfo";
public const string RmiName_NotifyPlayerExit="NotifyPlayerExit";
       
public const string RmiName_First = RmiName_NotifyPlayerJoin;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_NotifyPlayerJoin="";
public const string RmiName_NotifyPlayerInfo="";
public const string RmiName_NotifyPlayerExit="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
namespace Net_Behavior_C2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool NotifyCharacterIdle(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyCharacterIdle;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyCharacterIdle, Common.NotifyCharacterIdle);
}

public bool NotifyCharacterIdle(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyCharacterIdle;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyCharacterIdle, Common.NotifyCharacterIdle);
}
public bool NotifyCharacterMove(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 pos, UnityEngine.Vector3 angle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyCharacterMove;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, pos);
		Arena_Server.Marshaler.Write(__msg, angle);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyCharacterMove, Common.NotifyCharacterMove);
}

public bool NotifyCharacterMove(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 pos, UnityEngine.Vector3 angle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyCharacterMove;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, pos);
Arena_Server.Marshaler.Write(__msg, angle);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyCharacterMove, Common.NotifyCharacterMove);
}
public bool NotifyCharacterMoveTarget(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string targetName)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyCharacterMoveTarget;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, targetName);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyCharacterMoveTarget, Common.NotifyCharacterMoveTarget);
}

public bool NotifyCharacterMoveTarget(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string targetName)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyCharacterMoveTarget;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, targetName);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyCharacterMoveTarget, Common.NotifyCharacterMoveTarget);
}
public bool NotifyCharacterMovePosition(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 pos, float distance)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyCharacterMovePosition;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, pos);
		Arena_Server.Marshaler.Write(__msg, distance);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyCharacterMovePosition, Common.NotifyCharacterMovePosition);
}

public bool NotifyCharacterMovePosition(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 pos, float distance)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyCharacterMovePosition;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, pos);
Arena_Server.Marshaler.Write(__msg, distance);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyCharacterMovePosition, Common.NotifyCharacterMovePosition);
}
public bool NotifyCharacterAttack(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 dir)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyCharacterAttack;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, dir);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyCharacterAttack, Common.NotifyCharacterAttack);
}

public bool NotifyCharacterAttack(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 dir)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyCharacterAttack;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, dir);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyCharacterAttack, Common.NotifyCharacterAttack);
}
public bool NotifyCharacterSkill(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 dir, int skillHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyCharacterSkill;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, dir);
		Arena_Server.Marshaler.Write(__msg, skillHandle);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyCharacterSkill, Common.NotifyCharacterSkill);
}

public bool NotifyCharacterSkill(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 dir, int skillHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyCharacterSkill;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, dir);
Arena_Server.Marshaler.Write(__msg, skillHandle);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyCharacterSkill, Common.NotifyCharacterSkill);
}
public bool NotifyCharacterSkillEnd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 dir, int skillHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyCharacterSkillEnd;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, dir);
		Arena_Server.Marshaler.Write(__msg, skillHandle);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyCharacterSkillEnd, Common.NotifyCharacterSkillEnd);
}

public bool NotifyCharacterSkillEnd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 dir, int skillHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyCharacterSkillEnd;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, dir);
Arena_Server.Marshaler.Write(__msg, skillHandle);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyCharacterSkillEnd, Common.NotifyCharacterSkillEnd);
}
public bool NotifyItemEquip(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int itemHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyItemEquip;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, itemHandle);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyItemEquip, Common.NotifyItemEquip);
}

public bool NotifyItemEquip(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int itemHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyItemEquip;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, itemHandle);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyItemEquip, Common.NotifyItemEquip);
}
public bool NotifyItemUnequip(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, EItemType itemType)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyItemUnequip;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, itemType);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyItemUnequip, Common.NotifyItemUnequip);
}

public bool NotifyItemUnequip(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, EItemType itemType)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyItemUnequip;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, itemType);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyItemUnequip, Common.NotifyItemUnequip);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_NotifyCharacterIdle="NotifyCharacterIdle";
public const string RmiName_NotifyCharacterMove="NotifyCharacterMove";
public const string RmiName_NotifyCharacterMoveTarget="NotifyCharacterMoveTarget";
public const string RmiName_NotifyCharacterMovePosition="NotifyCharacterMovePosition";
public const string RmiName_NotifyCharacterAttack="NotifyCharacterAttack";
public const string RmiName_NotifyCharacterSkill="NotifyCharacterSkill";
public const string RmiName_NotifyCharacterSkillEnd="NotifyCharacterSkillEnd";
public const string RmiName_NotifyItemEquip="NotifyItemEquip";
public const string RmiName_NotifyItemUnequip="NotifyItemUnequip";
       
public const string RmiName_First = RmiName_NotifyCharacterIdle;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_NotifyCharacterIdle="";
public const string RmiName_NotifyCharacterMove="";
public const string RmiName_NotifyCharacterMoveTarget="";
public const string RmiName_NotifyCharacterMovePosition="";
public const string RmiName_NotifyCharacterAttack="";
public const string RmiName_NotifyCharacterSkill="";
public const string RmiName_NotifyCharacterSkillEnd="";
public const string RmiName_NotifyItemEquip="";
public const string RmiName_NotifyItemUnequip="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
namespace Net_Status_C2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
       
public const string RmiName_First = "";
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
namespace Net_Community_C2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool NotifyRequestJoinPrivateMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int mapHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyRequestJoinPrivateMap;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, mapHandle);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyRequestJoinPrivateMap, Common.NotifyRequestJoinPrivateMap);
}

public bool NotifyRequestJoinPrivateMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int mapHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyRequestJoinPrivateMap;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, mapHandle);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyRequestJoinPrivateMap, Common.NotifyRequestJoinPrivateMap);
}
public bool NotifyReplyJoinPrivateMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isReady)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyReplyJoinPrivateMap;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isReady);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyReplyJoinPrivateMap, Common.NotifyReplyJoinPrivateMap);
}

public bool NotifyReplyJoinPrivateMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isReady)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyReplyJoinPrivateMap;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isReady);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyReplyJoinPrivateMap, Common.NotifyReplyJoinPrivateMap);
}
public bool NotifyRequestJoinPrivatePortal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int portalNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyRequestJoinPrivatePortal;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, portalNumber);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyRequestJoinPrivatePortal, Common.NotifyRequestJoinPrivatePortal);
}

public bool NotifyRequestJoinPrivatePortal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int portalNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyRequestJoinPrivatePortal;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, portalNumber);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyRequestJoinPrivatePortal, Common.NotifyRequestJoinPrivatePortal);
}
public bool NotifyReplyJoinPrivatePortal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isReady)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyReplyJoinPrivatePortal;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isReady);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyReplyJoinPrivatePortal, Common.NotifyReplyJoinPrivatePortal);
}

public bool NotifyReplyJoinPrivatePortal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isReady)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyReplyJoinPrivatePortal;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isReady);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyReplyJoinPrivatePortal, Common.NotifyReplyJoinPrivatePortal);
}
public bool NotifyJoinPrivatePortalCancle(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyJoinPrivatePortalCancle;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyJoinPrivatePortalCancle, Common.NotifyJoinPrivatePortalCancle);
}

public bool NotifyJoinPrivatePortalCancle(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyJoinPrivatePortalCancle;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyJoinPrivatePortalCancle, Common.NotifyJoinPrivatePortalCancle);
}
public bool NotifyRequestPartyList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyRequestPartyList;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyRequestPartyList, Common.NotifyRequestPartyList);
}

public bool NotifyRequestPartyList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyRequestPartyList;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyRequestPartyList, Common.NotifyRequestPartyList);
}
public bool NotifyReplyPartyList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int handle, string name, Nettention.Proud.HostID id, int number, int currNumber, int level)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyReplyPartyList;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, handle);
		Arena_Server.Marshaler.Write(__msg, name);
		Arena_Server.Marshaler.Write(__msg, id);
		Arena_Server.Marshaler.Write(__msg, number);
		Arena_Server.Marshaler.Write(__msg, currNumber);
		Arena_Server.Marshaler.Write(__msg, level);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyReplyPartyList, Common.NotifyReplyPartyList);
}

public bool NotifyReplyPartyList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int handle, string name, Nettention.Proud.HostID id, int number, int currNumber, int level)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyReplyPartyList;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, handle);
Arena_Server.Marshaler.Write(__msg, name);
Arena_Server.Marshaler.Write(__msg, id);
Arena_Server.Marshaler.Write(__msg, number);
Arena_Server.Marshaler.Write(__msg, currNumber);
Arena_Server.Marshaler.Write(__msg, level);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyReplyPartyList, Common.NotifyReplyPartyList);
}
public bool NotifySendChat(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string chat)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifySendChat;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, chat);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifySendChat, Common.NotifySendChat);
}

public bool NotifySendChat(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string chat)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifySendChat;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, chat);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifySendChat, Common.NotifySendChat);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_NotifyRequestJoinPrivateMap="NotifyRequestJoinPrivateMap";
public const string RmiName_NotifyReplyJoinPrivateMap="NotifyReplyJoinPrivateMap";
public const string RmiName_NotifyRequestJoinPrivatePortal="NotifyRequestJoinPrivatePortal";
public const string RmiName_NotifyReplyJoinPrivatePortal="NotifyReplyJoinPrivatePortal";
public const string RmiName_NotifyJoinPrivatePortalCancle="NotifyJoinPrivatePortalCancle";
public const string RmiName_NotifyRequestPartyList="NotifyRequestPartyList";
public const string RmiName_NotifyReplyPartyList="NotifyReplyPartyList";
public const string RmiName_NotifySendChat="NotifySendChat";
       
public const string RmiName_First = RmiName_NotifyRequestJoinPrivateMap;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_NotifyRequestJoinPrivateMap="";
public const string RmiName_NotifyReplyJoinPrivateMap="";
public const string RmiName_NotifyRequestJoinPrivatePortal="";
public const string RmiName_NotifyReplyJoinPrivatePortal="";
public const string RmiName_NotifyJoinPrivatePortalCancle="";
public const string RmiName_NotifyRequestPartyList="";
public const string RmiName_NotifyReplyPartyList="";
public const string RmiName_NotifySendChat="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

