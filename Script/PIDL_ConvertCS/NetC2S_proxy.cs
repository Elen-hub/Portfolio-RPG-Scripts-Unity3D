




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace Net_Contact_C2S
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool RequestLoginCharacter(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestLoginCharacter;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, name);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestLoginCharacter, Common.RequestLoginCharacter);
}

public bool RequestLoginCharacter(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestLoginCharacter;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, name);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestLoginCharacter, Common.RequestLoginCharacter);
}
public bool RequestLogoutCharacter(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestLogoutCharacter;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestLogoutCharacter, Common.RequestLogoutCharacter);
}

public bool RequestLogoutCharacter(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestLogoutCharacter;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestLogoutCharacter, Common.RequestLogoutCharacter);
}
public bool RequestChangeChannel(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int channel)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestChangeChannel;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, channel);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestChangeChannel, Common.RequestChangeChannel);
}

public bool RequestChangeChannel(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int channel)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestChangeChannel;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, channel);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestChangeChannel, Common.RequestChangeChannel);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_RequestLoginCharacter="RequestLoginCharacter";
public const string RmiName_RequestLogoutCharacter="RequestLogoutCharacter";
public const string RmiName_RequestChangeChannel="RequestChangeChannel";
       
public const string RmiName_First = RmiName_RequestLoginCharacter;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_RequestLoginCharacter="";
public const string RmiName_RequestLogoutCharacter="";
public const string RmiName_RequestChangeChannel="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
namespace Net_Behavior_C2S
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool RequestCharacterJoinMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestCharacterJoinMap;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestCharacterJoinMap, Common.RequestCharacterJoinMap);
}

public bool RequestCharacterJoinMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestCharacterJoinMap;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestCharacterJoinMap, Common.RequestCharacterJoinMap);
}
public bool RequestCharacterJoinPublicPortal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int mapHandle, int portalNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestCharacterJoinPublicPortal;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, mapHandle);
		Arena_Server.Marshaler.Write(__msg, portalNumber);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestCharacterJoinPublicPortal, Common.RequestCharacterJoinPublicPortal);
}

public bool RequestCharacterJoinPublicPortal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int mapHandle, int portalNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestCharacterJoinPublicPortal;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, mapHandle);
Arena_Server.Marshaler.Write(__msg, portalNumber);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestCharacterJoinPublicPortal, Common.RequestCharacterJoinPublicPortal);
}
public bool RequestCharacterJoinPrivateMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int mapHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestCharacterJoinPrivateMap;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, mapHandle);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestCharacterJoinPrivateMap, Common.RequestCharacterJoinPrivateMap);
}

public bool RequestCharacterJoinPrivateMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int mapHandle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestCharacterJoinPrivateMap;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, mapHandle);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestCharacterJoinPrivateMap, Common.RequestCharacterJoinPrivateMap);
}
public bool RequestCharacterJoinPrivatePortal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int mapHandle, int portalNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestCharacterJoinPrivatePortal;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, mapHandle);
		Arena_Server.Marshaler.Write(__msg, portalNumber);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestCharacterJoinPrivatePortal, Common.RequestCharacterJoinPrivatePortal);
}

public bool RequestCharacterJoinPrivatePortal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int mapHandle, int portalNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestCharacterJoinPrivatePortal;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, mapHandle);
Arena_Server.Marshaler.Write(__msg, portalNumber);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestCharacterJoinPrivatePortal, Common.RequestCharacterJoinPrivatePortal);
}
public bool RequestCharacterExitPrivateMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestCharacterExitPrivateMap;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestCharacterExitPrivateMap, Common.RequestCharacterExitPrivateMap);
}

public bool RequestCharacterExitPrivateMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestCharacterExitPrivateMap;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestCharacterExitPrivateMap, Common.RequestCharacterExitPrivateMap);
}
public bool RequestPartyAppointHost(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestPartyAppointHost;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestPartyAppointHost, Common.RequestPartyAppointHost);
}

public bool RequestPartyAppointHost(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestPartyAppointHost;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestPartyAppointHost, Common.RequestPartyAppointHost);
}
public bool RequestPartyCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string name, int number, int level)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestPartyCreate;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, name);
		Arena_Server.Marshaler.Write(__msg, number);
		Arena_Server.Marshaler.Write(__msg, level);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestPartyCreate, Common.RequestPartyCreate);
}

public bool RequestPartyCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string name, int number, int level)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestPartyCreate;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, name);
Arena_Server.Marshaler.Write(__msg, number);
Arena_Server.Marshaler.Write(__msg, level);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestPartyCreate, Common.RequestPartyCreate);
}
public bool RequestPartyJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int handle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestPartyJoin;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, handle);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestPartyJoin, Common.RequestPartyJoin);
}

public bool RequestPartyJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int handle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestPartyJoin;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, handle);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestPartyJoin, Common.RequestPartyJoin);
}
public bool RequestPartyLeave(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestPartyLeave;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestPartyLeave, Common.RequestPartyLeave);
}

public bool RequestPartyLeave(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestPartyLeave;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestPartyLeave, Common.RequestPartyLeave);
}
public bool RequestPartyMemberKick(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestPartyMemberKick;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestPartyMemberKick, Common.RequestPartyMemberKick);
}

public bool RequestPartyMemberKick(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestPartyMemberKick;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestPartyMemberKick, Common.RequestPartyMemberKick);
}
public bool RequestPartySetState(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, EPartyState state)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestPartySetState;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, state);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestPartySetState, Common.RequestPartySetState);
}

public bool RequestPartySetState(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, EPartyState state)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestPartySetState;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, state);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestPartySetState, Common.RequestPartySetState);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_RequestCharacterJoinMap="RequestCharacterJoinMap";
public const string RmiName_RequestCharacterJoinPublicPortal="RequestCharacterJoinPublicPortal";
public const string RmiName_RequestCharacterJoinPrivateMap="RequestCharacterJoinPrivateMap";
public const string RmiName_RequestCharacterJoinPrivatePortal="RequestCharacterJoinPrivatePortal";
public const string RmiName_RequestCharacterExitPrivateMap="RequestCharacterExitPrivateMap";
public const string RmiName_RequestPartyAppointHost="RequestPartyAppointHost";
public const string RmiName_RequestPartyCreate="RequestPartyCreate";
public const string RmiName_RequestPartyJoin="RequestPartyJoin";
public const string RmiName_RequestPartyLeave="RequestPartyLeave";
public const string RmiName_RequestPartyMemberKick="RequestPartyMemberKick";
public const string RmiName_RequestPartySetState="RequestPartySetState";
       
public const string RmiName_First = RmiName_RequestCharacterJoinMap;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_RequestCharacterJoinMap="";
public const string RmiName_RequestCharacterJoinPublicPortal="";
public const string RmiName_RequestCharacterJoinPrivateMap="";
public const string RmiName_RequestCharacterJoinPrivatePortal="";
public const string RmiName_RequestCharacterExitPrivateMap="";
public const string RmiName_RequestPartyAppointHost="";
public const string RmiName_RequestPartyCreate="";
public const string RmiName_RequestPartyJoin="";
public const string RmiName_RequestPartyLeave="";
public const string RmiName_RequestPartyMemberKick="";
public const string RmiName_RequestPartySetState="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

