




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace Net_Contact_S2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool ReplyLoginCharacter(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isContact)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyLoginCharacter;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isContact);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyLoginCharacter, Common.ReplyLoginCharacter);
}

public bool ReplyLoginCharacter(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isContact)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyLoginCharacter;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isContact);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyLoginCharacter, Common.ReplyLoginCharacter);
}
public bool ReplyLogoutCharacter(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isDiscontact)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyLogoutCharacter;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isDiscontact);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyLogoutCharacter, Common.ReplyLogoutCharacter);
}

public bool ReplyLogoutCharacter(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isDiscontact)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyLogoutCharacter;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isDiscontact);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyLogoutCharacter, Common.ReplyLogoutCharacter);
}
public bool ReplyChangeChannel(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isChange, Nettention.Proud.HostID groupID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyChangeChannel;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isChange);
		Arena_Server.Marshaler.Write(__msg, groupID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyChangeChannel, Common.ReplyChangeChannel);
}

public bool ReplyChangeChannel(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isChange, Nettention.Proud.HostID groupID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyChangeChannel;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isChange);
Arena_Server.Marshaler.Write(__msg, groupID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyChangeChannel, Common.ReplyChangeChannel);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ReplyLoginCharacter="ReplyLoginCharacter";
public const string RmiName_ReplyLogoutCharacter="ReplyLogoutCharacter";
public const string RmiName_ReplyChangeChannel="ReplyChangeChannel";
       
public const string RmiName_First = RmiName_ReplyLoginCharacter;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ReplyLoginCharacter="";
public const string RmiName_ReplyLogoutCharacter="";
public const string RmiName_ReplyChangeChannel="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
namespace Net_Behavior_S2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool ReplyCharacterJoinMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, int mapHandle, UnityEngine.Vector3 pos)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyCharacterJoinMap;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		Arena_Server.Marshaler.Write(__msg, groupID);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		Arena_Server.Marshaler.Write(__msg, channel);
		Arena_Server.Marshaler.Write(__msg, mapHandle);
		Arena_Server.Marshaler.Write(__msg, pos);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyCharacterJoinMap, Common.ReplyCharacterJoinMap);
}

public bool ReplyCharacterJoinMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, int mapHandle, UnityEngine.Vector3 pos)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyCharacterJoinMap;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
Arena_Server.Marshaler.Write(__msg, groupID);
Arena_Server.Marshaler.Write(__msg, uniqueID);
Arena_Server.Marshaler.Write(__msg, channel);
Arena_Server.Marshaler.Write(__msg, mapHandle);
Arena_Server.Marshaler.Write(__msg, pos);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyCharacterJoinMap, Common.ReplyCharacterJoinMap);
}
public bool ReplyCharacterJoinPublicPortal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, int mapHandle, UnityEngine.Vector3 pos)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyCharacterJoinPublicPortal;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		Arena_Server.Marshaler.Write(__msg, groupID);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		Arena_Server.Marshaler.Write(__msg, channel);
		Arena_Server.Marshaler.Write(__msg, mapHandle);
		Arena_Server.Marshaler.Write(__msg, pos);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyCharacterJoinPublicPortal, Common.ReplyCharacterJoinPublicPortal);
}

public bool ReplyCharacterJoinPublicPortal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, int mapHandle, UnityEngine.Vector3 pos)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyCharacterJoinPublicPortal;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
Arena_Server.Marshaler.Write(__msg, groupID);
Arena_Server.Marshaler.Write(__msg, uniqueID);
Arena_Server.Marshaler.Write(__msg, channel);
Arena_Server.Marshaler.Write(__msg, mapHandle);
Arena_Server.Marshaler.Write(__msg, pos);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyCharacterJoinPublicPortal, Common.ReplyCharacterJoinPublicPortal);
}
public bool ReplyCharacterJoinPrivateMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, int mapHandle, UnityEngine.Vector3 pos, string enermyData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyCharacterJoinPrivateMap;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		Arena_Server.Marshaler.Write(__msg, groupID);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		Arena_Server.Marshaler.Write(__msg, channel);
		Arena_Server.Marshaler.Write(__msg, mapHandle);
		Arena_Server.Marshaler.Write(__msg, pos);
		Arena_Server.Marshaler.Write(__msg, enermyData);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyCharacterJoinPrivateMap, Common.ReplyCharacterJoinPrivateMap);
}

public bool ReplyCharacterJoinPrivateMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, int mapHandle, UnityEngine.Vector3 pos, string enermyData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyCharacterJoinPrivateMap;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
Arena_Server.Marshaler.Write(__msg, groupID);
Arena_Server.Marshaler.Write(__msg, uniqueID);
Arena_Server.Marshaler.Write(__msg, channel);
Arena_Server.Marshaler.Write(__msg, mapHandle);
Arena_Server.Marshaler.Write(__msg, pos);
Arena_Server.Marshaler.Write(__msg, enermyData);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyCharacterJoinPrivateMap, Common.ReplyCharacterJoinPrivateMap);
}
public bool ReplyCharacterJoinPrivatePortal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, UnityEngine.Vector3 pos, string enermyData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyCharacterJoinPrivatePortal;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		Arena_Server.Marshaler.Write(__msg, groupID);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		Arena_Server.Marshaler.Write(__msg, channel);
		Arena_Server.Marshaler.Write(__msg, pos);
		Arena_Server.Marshaler.Write(__msg, enermyData);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyCharacterJoinPrivatePortal, Common.ReplyCharacterJoinPrivatePortal);
}

public bool ReplyCharacterJoinPrivatePortal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, UnityEngine.Vector3 pos, string enermyData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyCharacterJoinPrivatePortal;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
Arena_Server.Marshaler.Write(__msg, groupID);
Arena_Server.Marshaler.Write(__msg, uniqueID);
Arena_Server.Marshaler.Write(__msg, channel);
Arena_Server.Marshaler.Write(__msg, pos);
Arena_Server.Marshaler.Write(__msg, enermyData);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyCharacterJoinPrivatePortal, Common.ReplyCharacterJoinPrivatePortal);
}
public bool ReplyCharacterExitPrivateMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, int mapHandle, UnityEngine.Vector3 pos)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyCharacterExitPrivateMap;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		Arena_Server.Marshaler.Write(__msg, groupID);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		Arena_Server.Marshaler.Write(__msg, channel);
		Arena_Server.Marshaler.Write(__msg, mapHandle);
		Arena_Server.Marshaler.Write(__msg, pos);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyCharacterExitPrivateMap, Common.ReplyCharacterExitPrivateMap);
}

public bool ReplyCharacterExitPrivateMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess, Nettention.Proud.HostID groupID, int uniqueID, int channel, int mapHandle, UnityEngine.Vector3 pos)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyCharacterExitPrivateMap;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
Arena_Server.Marshaler.Write(__msg, groupID);
Arena_Server.Marshaler.Write(__msg, uniqueID);
Arena_Server.Marshaler.Write(__msg, channel);
Arena_Server.Marshaler.Write(__msg, mapHandle);
Arena_Server.Marshaler.Write(__msg, pos);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyCharacterExitPrivateMap, Common.ReplyCharacterExitPrivateMap);
}
public bool ReplyPartyCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess, int handle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyPartyCreate;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		Arena_Server.Marshaler.Write(__msg, handle);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyPartyCreate, Common.ReplyPartyCreate);
}

public bool ReplyPartyCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess, int handle)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyPartyCreate;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
Arena_Server.Marshaler.Write(__msg, handle);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyPartyCreate, Common.ReplyPartyCreate);
}
public bool ReplyPartyJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess, string name, Nettention.Proud.HostID id, int number, int level, string members)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyPartyJoin;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		Arena_Server.Marshaler.Write(__msg, name);
		Arena_Server.Marshaler.Write(__msg, id);
		Arena_Server.Marshaler.Write(__msg, number);
		Arena_Server.Marshaler.Write(__msg, level);
		Arena_Server.Marshaler.Write(__msg, members);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyPartyJoin, Common.ReplyPartyJoin);
}

public bool ReplyPartyJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess, string name, Nettention.Proud.HostID id, int number, int level, string members)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyPartyJoin;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
Arena_Server.Marshaler.Write(__msg, name);
Arena_Server.Marshaler.Write(__msg, id);
Arena_Server.Marshaler.Write(__msg, number);
Arena_Server.Marshaler.Write(__msg, level);
Arena_Server.Marshaler.Write(__msg, members);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyPartyJoin, Common.ReplyPartyJoin);
}
public bool ReplyPartyLeave(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyPartyLeave;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyPartyLeave, Common.ReplyPartyLeave);
}

public bool ReplyPartyLeave(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyPartyLeave;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyPartyLeave, Common.ReplyPartyLeave);
}
public bool ReplyPartySetState(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool isSuccess)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReplyPartySetState;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, isSuccess);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReplyPartySetState, Common.ReplyPartySetState);
}

public bool ReplyPartySetState(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool isSuccess)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReplyPartySetState;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, isSuccess);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReplyPartySetState, Common.ReplyPartySetState);
}
public bool NotifyPartyAppointHost(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPartyAppointHost;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPartyAppointHost, Common.NotifyPartyAppointHost);
}

public bool NotifyPartyAppointHost(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPartyAppointHost;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPartyAppointHost, Common.NotifyPartyAppointHost);
}
public bool NotifyPartyJoinMember(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id, string name, int handle, int level)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPartyJoinMember;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, id);
		Arena_Server.Marshaler.Write(__msg, name);
		Arena_Server.Marshaler.Write(__msg, handle);
		Arena_Server.Marshaler.Write(__msg, level);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPartyJoinMember, Common.NotifyPartyJoinMember);
}

public bool NotifyPartyJoinMember(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id, string name, int handle, int level)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPartyJoinMember;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, id);
Arena_Server.Marshaler.Write(__msg, name);
Arena_Server.Marshaler.Write(__msg, handle);
Arena_Server.Marshaler.Write(__msg, level);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPartyJoinMember, Common.NotifyPartyJoinMember);
}
public bool NotifyPartyLeaveMember(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPartyLeaveMember;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPartyLeaveMember, Common.NotifyPartyLeaveMember);
}

public bool NotifyPartyLeaveMember(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPartyLeaveMember;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPartyLeaveMember, Common.NotifyPartyLeaveMember);
}
public bool NotifyPartyMemberKick(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPartyMemberKick;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPartyMemberKick, Common.NotifyPartyMemberKick);
}

public bool NotifyPartyMemberKick(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPartyMemberKick;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPartyMemberKick, Common.NotifyPartyMemberKick);
}
public bool NotifyRespawnEnermy(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int handle, int uniqueID, UnityEngine.Vector3 pos, float angle, float respawnTime)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyRespawnEnermy;
		__msg.Write(__msgid);
		Arena_Server.Marshaler.Write(__msg, handle);
		Arena_Server.Marshaler.Write(__msg, uniqueID);
		Arena_Server.Marshaler.Write(__msg, pos);
		Arena_Server.Marshaler.Write(__msg, angle);
		Arena_Server.Marshaler.Write(__msg, respawnTime);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyRespawnEnermy, Common.NotifyRespawnEnermy);
}

public bool NotifyRespawnEnermy(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int handle, int uniqueID, UnityEngine.Vector3 pos, float angle, float respawnTime)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyRespawnEnermy;
__msg.Write(__msgid);
Arena_Server.Marshaler.Write(__msg, handle);
Arena_Server.Marshaler.Write(__msg, uniqueID);
Arena_Server.Marshaler.Write(__msg, pos);
Arena_Server.Marshaler.Write(__msg, angle);
Arena_Server.Marshaler.Write(__msg, respawnTime);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyRespawnEnermy, Common.NotifyRespawnEnermy);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ReplyCharacterJoinMap="ReplyCharacterJoinMap";
public const string RmiName_ReplyCharacterJoinPublicPortal="ReplyCharacterJoinPublicPortal";
public const string RmiName_ReplyCharacterJoinPrivateMap="ReplyCharacterJoinPrivateMap";
public const string RmiName_ReplyCharacterJoinPrivatePortal="ReplyCharacterJoinPrivatePortal";
public const string RmiName_ReplyCharacterExitPrivateMap="ReplyCharacterExitPrivateMap";
public const string RmiName_ReplyPartyCreate="ReplyPartyCreate";
public const string RmiName_ReplyPartyJoin="ReplyPartyJoin";
public const string RmiName_ReplyPartyLeave="ReplyPartyLeave";
public const string RmiName_ReplyPartySetState="ReplyPartySetState";
public const string RmiName_NotifyPartyAppointHost="NotifyPartyAppointHost";
public const string RmiName_NotifyPartyJoinMember="NotifyPartyJoinMember";
public const string RmiName_NotifyPartyLeaveMember="NotifyPartyLeaveMember";
public const string RmiName_NotifyPartyMemberKick="NotifyPartyMemberKick";
public const string RmiName_NotifyRespawnEnermy="NotifyRespawnEnermy";
       
public const string RmiName_First = RmiName_ReplyCharacterJoinMap;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ReplyCharacterJoinMap="";
public const string RmiName_ReplyCharacterJoinPublicPortal="";
public const string RmiName_ReplyCharacterJoinPrivateMap="";
public const string RmiName_ReplyCharacterJoinPrivatePortal="";
public const string RmiName_ReplyCharacterExitPrivateMap="";
public const string RmiName_ReplyPartyCreate="";
public const string RmiName_ReplyPartyJoin="";
public const string RmiName_ReplyPartyLeave="";
public const string RmiName_ReplyPartySetState="";
public const string RmiName_NotifyPartyAppointHost="";
public const string RmiName_NotifyPartyJoinMember="";
public const string RmiName_NotifyPartyLeaveMember="";
public const string RmiName_NotifyPartyMemberKick="";
public const string RmiName_NotifyRespawnEnermy="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

